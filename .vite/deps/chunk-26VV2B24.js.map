{
  "version": 3,
  "sources": ["../../node_modules/@tsparticles/engine/browser/Core/Utils/ExternalInteractorBase.js", "../../node_modules/@tsparticles/engine/browser/Core/Utils/ParticlesInteractorBase.js", "../../node_modules/@tsparticles/engine/browser/Utils/EventDispatcher.js", "../../node_modules/@tsparticles/engine/browser/Core/Engine.js", "../../node_modules/@tsparticles/engine/browser/Utils/HslColorManager.js", "../../node_modules/@tsparticles/engine/browser/Utils/RgbColorManager.js", "../../node_modules/@tsparticles/engine/browser/init.js", "../../node_modules/@tsparticles/engine/browser/index.js"],
  "sourcesContent": ["export class ExternalInteractorBase {\n    constructor(container) {\n        this.type = \"external\";\n        this.container = container;\n    }\n}\n", "export class ParticlesInteractorBase {\n    constructor(container) {\n        this.type = \"particles\";\n        this.container = container;\n    }\n}\n", "export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners?.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener), minIndex = 0;\n        if (idx < minIndex) {\n            return;\n        }\n        const deleteCount = 1;\n        if (length === deleteCount) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, deleteCount);\n        }\n    }\n}\n", "import { errorPrefix, generatedAttribute } from \"./Utils/Constants.js\";\nimport { executeOnSingleOrMultiple, getLogger, itemFromSingleOrMultiple } from \"../Utils/Utils.js\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher.js\";\nimport { getRandom } from \"../Utils/NumberUtils.js\";\nasync function getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = await Promise.all([...initializers.values()].map((t) => t(container)));\n        map.set(container, res);\n    }\n    return res;\n}\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return (await response.json());\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"3.3.0\";\n    }\n    addConfig(config) {\n        const key = config.key ?? config.name ?? \"default\";\n        this._configs.set(key, config);\n        this._eventDispatcher.dispatchEvent(\"configAdded\", { data: { name: key, config } });\n    }\n    async addEffect(effect, drawer, refresh = true) {\n        executeOnSingleOrMultiple(effect, (type) => {\n            if (!this.getEffectDrawer(type)) {\n                this.effectDrawers.set(type, drawer);\n            }\n        });\n        await this.refresh(refresh);\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this._initializers.interactors.set(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this._initializers.movers.set(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this._initializers.updaters.set(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        if (!this.getPathGenerator(name)) {\n            this.pathGenerators.set(name, generator);\n        }\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        if (override || !this.getPreset(preset)) {\n            this.presets.set(preset, options);\n        }\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, refresh = true) {\n        executeOnSingleOrMultiple(shape, (type) => {\n            if (!this.getShapeDrawer(type)) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        });\n        await this.refresh(refresh);\n    }\n    clearPlugins(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            const deleteCount = 1;\n            dom.splice(index, deleteCount);\n            return;\n        }\n        return item;\n    }\n    async getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (plugin.needsPlugin(container.actualOptions)) {\n                res.set(plugin.id, await plugin.getPlugin(container));\n            }\n        }\n        return res;\n    }\n    getEffectDrawer(type) {\n        return this.effectDrawers.get(type);\n    }\n    async getInteractors(container, force = false) {\n        return await getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    async getMovers(container, force = false) {\n        return await getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.shapeDrawers.get(type);\n    }\n    getSupportedEffects() {\n        return this.effectDrawers.keys();\n    }\n    getSupportedShapes() {\n        return this.shapeDrawers.keys();\n    }\n    async getUpdaters(container, force = false) {\n        return await getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(params) {\n        const randomFactor = 10000, id = params.id ?? params.element?.id ?? `tsparticles${Math.floor(getRandom() * randomFactor)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) => v.id.description === id), minIndex = 0;\n        if (oldIndex >= minIndex) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                const deleteCount = 1;\n                dom.splice(oldIndex, deleteCount);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                const firstIndex = 0;\n                canvasEl = existingCanvases[firstIndex];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const { Container } = await import(\"./Container.js\"), newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= minIndex) {\n            const deleteCount = 0;\n            dom.splice(oldIndex, deleteCount, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            updater.loadOptions?.(options, ...sourceOptions);\n        }\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        await Promise.all(this.dom().map((t) => t.refresh()));\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n}\n", "import { getRangeValue, parseAlpha } from \"./NumberUtils.js\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils.js\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input), minLength = 4, defaultAlpha = 1, radix = 10;\n        return result\n            ? hslaToRgba({\n                a: result.length > minLength ? parseAlpha(result[5]) : defaultAlpha,\n                h: parseInt(result[1], radix),\n                l: parseInt(result[3], radix),\n                s: parseInt(result[2], radix),\n            })\n            : undefined;\n    }\n}\n", "import { getRangeValue, parseAlpha } from \"./NumberUtils.js\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input), radix = 10, minLength = 4, defaultAlpha = 1;\n        return result\n            ? {\n                a: result.length > minLength ? parseAlpha(result[5]) : defaultAlpha,\n                b: parseInt(result[3], radix),\n                g: parseInt(result[2], radix),\n                r: parseInt(result[1], radix),\n            }\n            : undefined;\n    }\n}\n", "import { Engine } from \"./Core/Engine.js\";\nimport { HslColorManager } from \"./Utils/HslColorManager.js\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager.js\";\nimport { addColorManager } from \"./Utils/ColorUtils.js\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n", "import { init } from \"./init.js\";\nimport { isSsr } from \"./Utils/Utils.js\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports.js\";\nexport * from \"./export-types.js\";\nexport { tsParticles };\n"],
  "mappings": "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",
  "names": []
}
